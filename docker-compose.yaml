

services:
  minio:
    image: quay.io/minio/minio:${MINIO_VERSION}
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_storage:/data
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: minioadmin
      MINIO_NOTIFY_KAFKA_ENABLE_EventKafka: "on"
      MINIO_NOTIFY_KAFKA_BROKERS_EventKafka: "kafka-broker:29092"
      MINIO_NOTIFY_KAFKA_TOPIC_EventKafka: "sink-products"
      MINIO_NOTIFY_KAFKA_QUEUE_LIMIT_EventKafka: "10000"
      MINIO_NOTIFY_KAFKA_TLS_EventKafka: "off"
    command: server --console-address ":9001" /data
    networks:
      - rede_fia

  mc:
    image: minio/mc:${MINIO_MC_VERSION}
    container_name: mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc alias set myminio http://minio:9000 admin minioadmin) do sleep 1; done;
      /usr/bin/mc mb myminio/bronze;
      /usr/bin/mc event add myminio/bronze arn:minio:sqs::EventKafka:kafka --event put --suffix .json;
      sleep 3000 "
    networks:
      - rede_fia

  nifi:
    image: apache/nifi:${NIFI_VERSION}
    container_name: nifi
    hostname: nifi
    volumes:
      - ./19.Data-Flow-Nifi/files:/files
      - ./postgresql/postgresql-42.5.1.jar:/util/postgresql-42.5.1.jar
    environment:
      NIFI_WEB_HTTPS_PORT: "9443"
      SINGLE_USER_CREDENTIALS_USERNAME: admin
      SINGLE_USER_CREDENTIALS_PASSWORD: fia@2024@ladata@laboratorio
      TZ: "America/Sao_Paulo"
    depends_on:
      - kafka-broker
    ports:
      - "9443:9443"
    networks:
      - rede_fia

  zookeeper:
    image: confluentinc/cp-zookeeper:${CONFLUENT_VERSION}
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
    ports:
      - "2181:2181"
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    networks:
      - rede_fia

  kafka-broker:
    image: confluentinc/cp-kafka:${CONFLUENT_VERSION}
    container_name: kafka-broker
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9991:9991"
    environment:
      KAFKA_BROKER_ID: 101
      KAFKA_JMX_PORT: 9991
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka-broker:29092
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'false'
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    networks:
      - rede_fia

  clickhouse:
    image: clickhouse/clickhouse-server:${CLICK_HOUSE_VERSION}
    container_name: clickhouse
    hostname: clickhouse
    depends_on:
      - minio
    platform: linux/amd64
    ports:
      - "18123:8123"
      - "29000:9000"
    environment:
      CLICKHOUSE_DB: "datalab"
      CLICKHOUSE_USER: "admin"
      CLICKHOUSE_PASSWORD: "admin"
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: "1"
      AWS_ACCESS_KEY_ID: cursolab
      AWS_SECRET_ACCESS_KEY: cursolab
    volumes:
      - ./25.Olap/s3.xml:/etc/clickhouse-server/config.d/config.xml
      - ./25.Olap/data:/var/lib/clickhouse/user_files
    networks:
      - rede_fia

networks:
  rede_fia:

volumes:
 minio_storage: {}
